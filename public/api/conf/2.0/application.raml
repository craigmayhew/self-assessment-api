#%RAML 1.0
---

title: Self Assessment (MTD)
version: 2.0
protocols: [ HTTPS ]
baseUri: https://api.service.hmrc.gov.uk/
mediaType: application/json

uses:
  sec: https://developer.service.hmrc.gov.uk/api-documentation/assets/common/modules/securitySchemes.raml
  headers: https://developer.service.hmrc.gov.uk/api-documentation/assets/common/modules/headers.raml
  annotations: https://developer.service.hmrc.gov.uk/api-documentation/assets/common/modules/annotations.raml
  types: https://developer.service.hmrc.gov.uk/api-documentation/assets/common/modules/types.raml

documentation:
  - title: Context
    content: !include docs/context.md
  - title: Overview
    content: !include docs/overview.md
  - title: Terminology
    content: !include docs/terminology.md
  - title: Changelog
    content: !include docs/changeLog.md
  - title: Support
    content: !include docs/support.md
  - title: Testing
    content: !include docs/testing.md
  - title: Versioning
    content: !include https://developer.service.hmrc.gov.uk/api-documentation/assets/common/docs/versioning.md
  - title: Errors
    content: !include https://developer.service.hmrc.gov.uk/api-documentation/assets/common/docs/errors.md
  - title: Error Codes
    content: !include docs/error_codes.md

traits:
  contentType:
    headers:
      Content-Type:
        description: Specifies the format of the request body, which must be JSON.
        type: string
        required: true
        example: application/json
  testScenarioHeader:
    headers:
      Gov-Test-Scenario:
        description: Only in sandbox environment. See Test Data table for all header values.
        type: string
        required: false
        example: '-'
  agentSubscription:
    responses:
      400:
        body:
          application/json:
            type: types.errorResponse
            examples:
      403:
        body:
          application/json:
            type: types.errorResponse
            examples:
              agentNotSubscribed:
                description: Agent not subscribed to Agent Services
                value:
                  code: AGENT_NOT_SUBSCRIBED
              agentNotAuthorized:
                description: The agent is not authorised to perform this action
                value:
                  code: AGENT_NOT_AUTHORIZED
  clientSubscriptionToMTD:
      responses:
        403:
          body:
            application/json:
              type: types.errorResponse
              examples:
                clientNotSubscribedToMTD:
                  description: The client is not subscribed to MTD
                  value:
                    code: CLIENT_NOT_SUBSCRIBED
  clientOrAgentNotAuthorised:
    responses:
      403:
        body:
          application/json:
            type: types.errorResponse
            examples:
              clientNotSubscribedToMTD:
                description: 'The client and/or agent is not authorised. This is normally because: the client is not subscribed to MTD, the agent is not subscribed to Agent Services, or the client has not authorised the agent to act on their behalf.'
                value:
                  code: CLIENT_OR_AGENT_NOT_AUTHORISED
  periodBVRs:
    responses:
      403:
        body:
          application/json:
            type: types.errorResponse
            examples:
              overlappingPeriod:
                description: If update period overlaps with any of the existing update periods
                value:
                  code: OVERLAPPING_PERIOD
              misAlignedPeriod:
                description: If update period is not within the accounting period
                value:
                  code: MISALIGNED_PERIOD
              nonContiguousPeriod:
                description: If update periods are not contiguous
                value:
                  code: NOT_CONTIGUOUS_PERIOD

/self-assessment:
  /ni/{nino}:
    uriParameters:
      nino:
        description: National Insurance number, in the format AA999999A.
        type: string
        example: AA999999A
    /self-employments:
      (annotations.group):
          name: Self-employment business
          description: !include docs/self-employment.md
      post:
        displayName: Add a self-employment business [test only]
        description: Add a self-employment business. This API is not available in production.
        (annotations.sandboxData): !include scenarios/agent-scenarios.md
        is: [headers.acceptHeader, contentType, agentSubscription, clientSubscriptionToMTD, testScenarioHeader]
        (annotations.scope): "write:self-assessment"
        securedBy: [ sec.oauth_2_0: { scopes: [ "write:self-assessment" ] } ]
        body:
          application/json:
            type: !include schemas/SelfEmployment_Create_Without_ID.json
            example: !include examples/self-employment/SelfEmploymentCreate.json
        responses:
          201:
            headers:
              Location:
                example: /self-assessment/ni/{nino}/self-employments/{selfEmploymentId}
                description: Location of the resource created
              X-CorrelationId:
                example: 5968c22d620000620096db5f
                description: Unique id for operation tracking
          400:
            body:
              application/json:
                type: types.errorResponse
                examples:
                  invalidNino:
                    description: Invalid NINO
                    value:
                      code: NINO_INVALID
                  mandatoryField:
                    description: Mandatory field missing
                    value:
                      code: MANDATORY_FIELD_MISSING
                  invalidDate:
                    description: Non ISO format date
                    value:
                      code: INVALID_DATE
                  commencementDateInThePast:
                    description: Commencement date should be today or in the past
                    value:
                      code: DATE_NOT_IN_THE_PAST
                  startDateInvalid:
                    description: Invalid start date
                    value:
                      code: START_DATE_INVALID
                  invalidAccountingPeriod:
                    description: Accounting period end is after start
                    value:
                      code: INVALID_ACCOUNTING_PERIOD
                  invalidValue:
                    description: Invalid accounting type
                    value:
                      code: INVALID_VALUE
                  invalidFieldLength:
                    description: Invalid field length
                    value:
                      code: INVALID_FIELD_LENGTH
                  invalidFieldFormat:
                    description: Invalid field format
                    value:
                      code: INVALID_FIELD_FORMAT
                  invalidPostcode:
                    description: Invalid postcode
                    value:
                      code: INVALID_POSTCODE
          403:
            body:
              application/json:
                type: types.errorResponse
                examples:
                  tooManySources:
                    description: Adding 2nd SE business
                    value:
                      code: TOO_MANY_SOURCES
      get:
        displayName: List all self-employment businesses
        description: List all self-employment businesses
        (annotations.sandboxData): !include scenarios/agent-scenarios.md
        is: [headers.acceptHeader, agentSubscription, clientSubscriptionToMTD, testScenarioHeader]
        (annotations.scope): "read:self-assessment"
        securedBy: [ sec.oauth_2_0: { scopes: [ "read:self-assessment" ] } ]
        responses:
          200:
            headers:
              X-CorrelationId:
                example: 5968c22d620000620096db51
                description: Unique id for operation tracking
            body:
              application/json:
                type: !include schemas/SelfEmployments.json
                example: !include examples/self-employment/SelfEmployments.json
          400:
            body:
              application/json:
                type: types.errorResponse
                examples:
                  invalidNino:
                    description: Invalid NINO
                    value:
                      code: NINO_INVALID
      /{selfEmploymentId}:
        description: Self-employment business
        uriParameters:
          selfEmploymentId:
            displayName: Self-employment ID
            description: An identifier for the self-employment business, unique to the customer.<p>Must conform to the regular expression `^X[A-Z0-9]{1}IS[0-9]{11}$`<p>
            type: string
        get:
          displayName: Get a self-employment business
          description: Get a self-employment business
          (annotations.sandboxData): !include scenarios/agent-scenarios.md
          is: [headers.acceptHeader, agentSubscription, clientSubscriptionToMTD, testScenarioHeader]
          (annotations.scope): "read:self-assessment"
          securedBy: [ sec.oauth_2_0: { scopes: [ "read:self-assessment" ] } ]
          responses:
            200:
              headers:
                X-CorrelationId:
                  example: 5968c22d620000620096db53
                  description: Unique id for operation tracking
              body:
                application/json:
                  type: !include schemas/SelfEmployment_Without_ID.json
                  example: !include examples/self-employment/SelfEmployment.json
            400:
                body:
                  application/json:
                    type: types.errorResponse
                    examples:
                      invalidNino:
                        description: Invalid NINO
                        value:
                          code: NINO_INVALID
            404:
        /obligations:
          get:
            displayName: Retrieve self-employment business obligations
            description: Retrieve self-employment business obligations. In sandbox environment, different scenarios for this endpoint can be simulated using 'Gov-Test-Scenario' header
            (annotations.sandboxData): !include scenarios/self-employment-obligation-scenarios.md
            is: [headers.acceptHeader, agentSubscription, clientSubscriptionToMTD, testScenarioHeader]
            (annotations.scope): "read:self-assessment"
            securedBy: [ sec.oauth_2_0: { scopes: [ "read:self-assessment" ] } ]
            responses:
              200:
                headers:
                  X-CorrelationId:
                    example: 5968c22d620000620096db53
                    description: Unique id for operation tracking
                body:
                  application/json:
                    type: !include schemas/Obligations.json
                    example: !include examples/Obligations.json
              400:
                body:
                  application/json:
                    type: types.errorResponse
                    examples:
                      invalidNino:
                        description: Invalid NINO
                        value:
                          code: NINO_INVALID
              404:
        /periods:
          post:
            displayName: Create a self-employment periodic update
            description: Create a self-employment periodic update for submission of periodic data i.e incomes and expenses.
                         Submissions which do not include any incomes or expenses are invalid.
                         You should submit zero values if you do not have incomes or expenses.
                         <br><br><b>Valid payload may contain either expenses or consolidatedExpenses elements.</b>
            (annotations.sandboxData): !include scenarios/agent-scenarios.md
            is: [headers.acceptHeader, contentType, agentSubscription, clientSubscriptionToMTD, testScenarioHeader, periodBVRs]
            (annotations.scope): "write:self-assessment"
            securedBy: [ sec.oauth_2_0: { scopes: [ "write:self-assessment" ] } ]
            body:
              application/json:
                type: !include schemas/SE_Period_Without_ID.json
                examples:
                 example-1:
                  description: Full expense details example
                  value: !include examples/self-employment/Period.json
                 example-2:
                  description: Consolidated expenses example
                  value: !include examples/self-employment/Period2.json
            responses:
              201:
                headers:
                  Location:
                    example: /self-assessment/ni/{nino}/self-employments/{selfEmploymentId}/periods/{periodId}
                    description: Location of the resource created
                  X-CorrelationId:
                    example: 5968c22d620000620096db54
                    description: Unique id for operation tracking
              400:
                body:
                  application/json:
                    type: types.errorResponse
                    examples:
                      invalidNino:
                        description: Invalid NINO
                        value:
                          code: NINO_INVALID
                      mandatoryField:
                        description: Mandatory field missing (from and to fields)
                        value:
                          code: MANDATORY_FIELD_MISSING
                      invalidDate:
                        description: Non ISO format date (from and to fields)
                        value:
                          code: INVALID_DATE
                      invalidPeriod:
                        description: The period 'from' date should come before the 'to' date
                        value:
                          code: INVALID_PERIOD
                      invalidMonetaryAmount:
                        description: income or expense is not a non-negative amount or up to 2 decimal places
                        value:
                          code: INVALID_MONETARY_AMOUNT
                      invalidDisallowableAmount:
                        description: disallowableAmount value is more than amount value (except for depreciation expense type) (Production-only)
                        value:
                          code: INVALID_DISALLOWABLE_AMOUNT
                      depreciationDisallowableAmount:
                        description: disallowableAmount value does not equal amount value (for depreciation expense type) (Production-only)
                        value:
                          code: DEPRECIATION_DISALLOWABLE_AMOUNT
                      noIncomesAndExpenses:
                        description: No incomes and expenses are supplied
                        value:
                          code: NO_INCOMES_AND_EXPENSES
                      bothExpensesSupplied:
                        description: Both expenses and consolidatedExpenses can not be present at the same time
                        value:
                          code: BOTH_EXPENSES_SUPPLIED
              403:
                body:
                  application/json:
                    type: types.errorResponse
                    examples:
                      notAllowedConsolidatedExpenses:
                        description: Consolidated expenses are not allowed if the accumulative turnover amount exceeds the threshold
                        value:
                          code: NOT_ALLOWED_CONSOLIDATED_EXPENSES
          get:
            displayName: List all self-employment update periods
            description: List all self-employment update periods.
            (annotations.sandboxData): !include scenarios/agent-scenarios.md
            is: [headers.acceptHeader, agentSubscription, clientSubscriptionToMTD, testScenarioHeader]
            (annotations.scope): "read:self-assessment"
            securedBy: [ sec.oauth_2_0: { scopes: [ "read:self-assessment" ] } ]
            responses:
              200:
                headers:
                  X-CorrelationId:
                    example: 5968c22d620000620096db55
                    description: Unique id for operation tracking
                body:
                  application/json:
                    type: !include schemas/Periods.json
                    example: !include examples/Periods.json
              400:
                body:
                  application/json:
                    type: types.errorResponse
                    examples:
                      invalidNino:
                        description: Invalid NINO
                        value:
                          code: NINO_INVALID
              404:
          /{periodId}:
            uriParameters:
              periodId:
                description: An identifier for the update period, unique to the customer's self-employment business.
                type: string
            get:
              displayName: Get a self-employment periodic update
              description: Get a single self-employment periodic update for a given identifier.
              (annotations.sandboxData): !include scenarios/agent-scenarios.md
              is: [headers.acceptHeader, agentSubscription, clientSubscriptionToMTD, testScenarioHeader]
              (annotations.scope): "read:self-assessment"
              securedBy: [ sec.oauth_2_0: { scopes: [ "read:self-assessment" ] } ]
              responses:
                200:
                  headers:
                    X-CorrelationId:
                      example: 5968c22d620000620096db56
                      description: Unique id for operation tracking
                  body:
                    application/json:
                      type: !include schemas/SE_Period_Without_ID.json
                      examples:
                        example-1:
                          description: Periodic update with full expense details example
                          value: !include examples/self-employment/Period.json
                        example-2:
                          description: Periodic update with consolidated expenses example
                          value: !include examples/self-employment/Period2.json
                400:
                  body:
                    application/json:
                      type: types.errorResponse
                      examples:
                        invalidNino:
                          description: Invalid NINO
                          value:
                            code: NINO_INVALID
                404:
            put:
              displayName: Amend a self-employment periodic update
              description: Amend a self-employment periodic update.
                           Submissions  which do not include any incomes or expenses are invalid.
                           You should submit zero values if you do not have incomes or expenses.
                           Valid payload may contain either expenses or consolidatedExpenses elements.
                           <br><br><b>Valid payload may contain either expenses or consolidatedExpenses elements.</b>
              is: [headers.acceptHeader, contentType, agentSubscription, clientSubscriptionToMTD, testScenarioHeader]
              (annotations.scope): "write:self-assessment"
              securedBy: [ sec.oauth_2_0: { scopes: [ "write:self-assessment" ] } ]
              body:
                application/json:
                  type: !include schemas/SE_UpdatePeriod.json
                  examples:
                    example-1:
                      description: Full expense details example
                      value: !include examples/self-employment/UpdatePeriod.json
                    example-2:
                      description: Consolidated expenses example
                      value: !include examples/self-employment/UpdatePeriod2.json
              responses:
                204:
                  headers:
                    X-CorrelationId:
                      example: 5968c22d620000620096db57
                      description: Unique id for operation tracking
                400:
                  body:
                    application/json:
                      type: types.errorResponse
                      examples:
                        invalidNino:
                          description: Invalid NINO
                          value:
                            code: NINO_INVALID
                        invalidMonetaryAmount:
                          description: income or expense is not a non-negative amount or up to 2 decimal places
                          value:
                            code: INVALID_MONETARY_AMOUNT
                        invalidDisallowableAmount:
                          description: disallowableAmount value is more than amount value (except for depreciation expense type) (Production-only)
                          value:
                            code: INVALID_DISALLOWABLE_AMOUNT
                        depreciationDisallowableAmount:
                          description: disallowableAmount value does not equal amount value (for depreciation expense type) (Production-only)
                          value:
                            code: DEPRECIATION_DISALLOWABLE_AMOUNT
                        noIncomesAndExpenses:
                          description: No incomes and expenses are supplied
                          value:
                            code: NO_INCOMES_AND_EXPENSES
                        bothExpensesSupplied:
                          description: Both expenses and consolidatedExpenses can not be present at the same time
                          value:
                            code: BOTH_EXPENSES_SUPPLIED
                403:
                  body:
                    application/json:
                      type: types.errorResponse
                      examples:
                        notAllowedConsolidatedExpenses:
                          description: Consolidated expenses are not allowed if the accumulative turnover amount exceeds the threshold
                          value:
                            code: NOT_ALLOWED_CONSOLIDATED_EXPENSES

                404:
        /{taxYear}:
          uriParameters:
            taxYear:
              description: The tax year to which the data applies
              type: string
              example: 2017-18
          put:
            displayName: Amend a self-employment annual summary
            description: Amend a self-employment annual summary for a tax year.
            (annotations.sandboxData): !include scenarios/agent-scenarios.md
            is: [headers.acceptHeader, contentType, agentSubscription, clientSubscriptionToMTD, testScenarioHeader]
            (annotations.scope): "write:self-assessment"
            securedBy: [ sec.oauth_2_0: { scopes: [ "write:self-assessment" ] } ]
            body:
              application/json:
                type: !include schemas/SE_AnnualSummary.json
                example: !include examples/self-employment/AnnualSummary.json
            responses:
              204:
                headers:
                  X-CorrelationId:
                    example: 5968c22d620000620096db58
                    description: Unique id for operation tracking
              400:
                body:
                  application/json:
                    type: types.errorResponse
                    examples:
                      invalidNino:
                        description: Invalid NINO
                        value:
                          code: NINO_INVALID
                      invalidTaxYear:
                        description: Invalid taxYear
                        value:
                          code: TAX_YEAR_INVALID
                      mandatoryField:
                        description: Mandatory field missing (from and to fields)
                        value:
                          code: MANDATORY_FIELD_MISSING
                      mandatoryField2:
                        description: Exemption code value must be present if the exempt flag is set to true
                        value:
                          code: MANDATORY_FIELD_MISSING
                      invalidMonetaryAmount1:
                        description: valid non-negative amount not provided where expected (except averagingAdjustment and basisAdjustment)
                        value:
                          code: INVALID_MONETARY_AMOUNT
                      invalidMonetaryAmount2:
                        description: valid amount not provided where expected (for averagingAdjustment and basisAdjustment)
                        value:
                          code: INVALID_MONETARY_AMOUNT
                      invalidValue:
                        description: Empty class4NicInfo element provided
                        value:
                          code: INVALID_VALUE
                      invalidValue2:
                        description: Exemption code must not be present if the exempt flag is set to false
                        value:
                          code: INVALID_VALUE
                      invalidValue3:
                        description: Exemption code must be present only if the exempt flag is set to true
                        value:
                          code: INVALID_VALUE
              403:
                body:
                  application/json:
                    type: types.errorResponse
                    examples:
                      notUnder16:
                        description: The Individual's age is equal to or greater than 16 years old on the 6th April of current tax year
                        value:
                          code: NOT_UNDER_16
                      notOverStatePension:
                        description: The Individual's age is less than their State Pension age on the 6th April of current tax year.
                        value:
                          code: NOT_OVER_STATE_PENSION
              404:
          get:
            displayName: Get a self-employment annual summary
            description: Get a self-employment annual summary for a tax year.
            (annotations.sandboxData): !include scenarios/agent-scenarios.md
            is: [headers.acceptHeader, agentSubscription, clientSubscriptionToMTD, testScenarioHeader]
            (annotations.scope): "read:self-assessment"
            securedBy: [ sec.oauth_2_0: { scopes: [ "read:self-assessment" ] } ]
            responses:
              200:
                headers:
                  X-CorrelationId:
                    example: 5968c22d620000620096db59
                    description: Unique id for operation tracking
                body:
                  application/json:
                    type: !include schemas/SE_AnnualSummary.json
                    example: !include examples/self-employment/AnnualSummary.json
              400:
                body:
                  application/json:
                    type: types.errorResponse
                    examples:
                      invalidNino:
                        description: Invalid NINO
                        value:
                          code: NINO_INVALID
                      invalidTaxYear:
                        description: Invalid taxYear
                        value:
                          code: TAX_YEAR_INVALID
              404:
          /income-summary:
             get:
                displayName:  Get Self-Employment Business Income Source Summary (BISS)
                description: Get the summary of self-employment income for a given tax year. This API is not available in production.
                (annotations.sandboxData): !include scenarios/self-employment-biss.md
                is: [headers.acceptHeader, contentType, agentSubscription, clientSubscriptionToMTD, testScenarioHeader]
                (annotations.scope): "read:self-assessment"
                securedBy: [ sec.oauth_2_0: { scopes: [ "read:self-assessment" ] } ]
                responses:
                  200:
                    headers:
                      X-CorrelationId:
                        example: 5968c22d620000620096db51
                        description: Unique id for operation tracking
                    body:
                      application/json:
                        type: !include schemas/self-employment/BISS/BISS.json
                        examples:
                         example-1:
                          description: >
                            Scenario: Net profit, taxable loss
                          value: !include examples/self-employment/BISS/net_profit.json
                         example-2:
                          description: >
                            Scenario: Net loss, taxable profit
                          value: !include examples/self-employment/BISS/net_loss.json
                  400:
                    body:
                      application/json:
                        type: types.errorResponse
                        examples:
                          invalidNino:
                            description: The format of the given National Insurance number is invalid.
                            value:
                              code: NINO_INVALID
                          invalidTaxYear:
                            description: The format of the given tax year is invalid.
                            value:
                              code: TAX_YEAR_INVALID
                          invalidId:
                            description: The format of the given self-employment ID is invalid.
                            value:
                              code: SELF_EMPLOYMENT_ID_INVALID
                  404:
                    body:
                      application/json:
                        type: types.errorResponse
                        examples:
                          noSubmissionData:
                            description: No submission data exists for the accounting period.
                            value:
                              code: NOT_FOUND
        /end-of-period-statements:
          /from:
            /{start}:
              /to:
                /{end}:
                  uriParameters:
                    start:
                      description: Valid ISO 8601 date for the start of the accounting period
                      type: string
                      example: 2017-04-06
                    end:
                      description: Valid ISO 8601 date for the end of the accounting period
                      type: string
                      example: 2018-04-05
                  post:
                    displayName: Submit Self-Employment End-of-Period Statement
                    description: Use this endpoint to finalise the end-of-period statement, for this accounting period, for a self-employment business.
                    (annotations.sandboxData): !include scenarios/self-employment-declaration-scenarios.md
                    is: [headers.acceptHeader, contentType, clientOrAgentNotAuthorised, testScenarioHeader]
                    (annotations.scope): "write:self-assessment"
                    securedBy: [ sec.oauth_2_0: { scopes: [ "write:self-assessment" ] } ]
                    body:
                      application/json:
                        type: !include schemas/Declaration.json
                        example: !include examples/self-employment/Declaration.json
                    responses:
                      204:
                        body:
                          application/json:
                            type:
                            examples:
                              example-1:
                                description: Successful submission returns an empty body.
                                value: ""
                      400:
                        body:
                          application/json:
                            type: types.errorResponse
                            examples:
                              invalidNino:
                                description: The format of the National Insurance number is invalid.
                                value:
                                  code: FORMAT_NINO
                              invalidStartDate:
                                description: The start date must be on or after 6th April 2017.
                                value:
                                  code: FORMAT_START_DATE
                              invalidEndDate:
                                description: Invalid account period end date
                                value:
                                  code: FORMAT_END_DATE
                              invalidDateRange:
                                description: The date range for the accounting period is invalid, for example the start date is after the end date.
                                value:
                                  code: RANGE_INVALID
                      403:
                        body:
                          application/json:
                            type: types.errorResponse
                            examples:
                              notFinalised:
                                description: Statement not declared as finalised.
                                value:
                                  code: RULE_NOT_FINALISED
                              alreadySubmitted:
                                description: You cannot submit a statement for the same accounting period twice.
                                value:
                                  code: RULE_ALREADY_SUBMITTED
                              earlySubmission:
                                description: You cannot submit a statement before the end of your accounting period.
                                value:
                                  code: RULE_EARLY_SUBMISSION
                              lateSubmission:
                                description: The period to finalise has passed.
                                value:
                                  code: RULE_LATE_SUBMISSION
                              consolidatedExpenses:
                                description: Consolidated expenses are not allowed if the cumulative turnover amount exceeds the threshold.
                                value:
                                  code: RULE_CONSOLIDATED_EXPENSES
                              class4Over16:
                                description: Class 4 exemption is not allowed because the individual’s age is greater than or equal to 16 years old on the 6th April of the current tax year.
                                value:
                                  code: RULE_CLASS4_OVER_16
                              class4PensionAge:
                                description: Class 4 exemption is not allowed because the individual's age is less than their State Pension age on the 6th April of the current tax year.
                                value:
                                  code: RULE_CLASS4_PENSION_AGE
                              accountingStartDate:
                                description: The period submission start date must match the accounting period start date.
                                value:
                                  code: RULE_ACCOUNTING_PERIOD_START_DATE
                              accountingEndDate:
                                description: The period submission end date must match the accounting period end date.
                                value:
                                  code: RULE_ACCOUNTING_PERIOD_END_DATE
                      404:
                        body:
                          application/json:
                            type: types.errorResponse
                            examples:
                              notFound:
                                description: No submission data exists for the accounting period.
                                value:
                                  code: MATCHING_RESOURCE_NOT_FOUND
      /{selfEmploymentId}/end-of-period-statements/obligations:
              uriParameters:
                selfEmploymentId:
                  displayName: Self-employment ID
                  description: An identifier for the self-employment business, unique to the customer.<p>Must conform to the regular expression `^[A-Za-z0-9]{15}$`<p>
                  type: string
              get:
                displayName: Retrieve End of Period Statement Obligations for a Self-Employment Business
                description: This end point allows you to retrieve End of Period Statement Obligations for a Self-Employment Business. The response can be filtered by providing a date range in query parameters.
                (annotations.sandboxData): !include scenarios/eops-se-obligation-scenarios.md
                is: [headers.acceptHeader, contentType, agentSubscription, clientSubscriptionToMTD, testScenarioHeader]
                (annotations.scope): "read:self-assessment"
                securedBy: [ sec.oauth_2_0: { scopes: [ "read:self-assessment" ] } ]
                queryParameters:
                  from:
                    description: Start of date range to filter obligations
                    type: string
                    example: 2017-04-06
                    required: false
                  to:
                    description: End of date range to filter obligations
                    type: string
                    example: 2018-04-05
                    required: false
                responses:
                  200:
                    headers:
                      X-CorrelationId:
                        example: 5968c22d620000620096db59
                        description: Unique id for operation tracking
                    body:
                      application/json:
                        type: !include schemas/Obligations-Eops-SE.json
                        examples:
                          example-1:
                            description: Example response for EOPs obligation that is Open
                            value: !include examples/obligations-eops/Obligations-Eops-Open.json
                          example-2:
                            description: Example response for EOPs obligation that is Fulfilled
                            value: !include examples/obligations-eops/Obligations-Eops-Fulfilled.json
                  400:
                    body:
                      application/json:
                        type: types.errorResponse
                        examples:
                          invalidNino:
                            description: Invalid NINO
                            value:
                              code: NINO_INVALID
                          invalidDateRange:
                            description: from date > to date
                            value:
                              code: INVALID_DATE_RANGE
                          invalidDate:
                            description: Invalid date in query parameters
                            value:
                              code: INVALID_DATE
                          selfEmploymentIdInvalid:
                            description: The provided self-employment ID is invalid
                            value:
                              code: SELF_EMPLOYMENT_ID_INVALID
    /uk-properties:
      (annotations.group):
        name: UK property business
        description: !include docs/uk-property.md
      post:
        displayName: Add a UK property business [test only]
        description: Add a UK property business. This API is not available in production.
        is: [headers.acceptHeader, contentType, clientSubscriptionToMTD, agentSubscription]
        (annotations.scope): "write:self-assessment"
        securedBy: [ sec.oauth_2_0: { scopes: [ "write:self-assessment" ] } ]
        body:
          application/json:
            type: !include schemas/CreateProperties.json
            example: !include examples/Empty.json
        responses:
          201:
            headers:
              X-CorrelationId:
                example: 5968c22d620000620096db10
                description: Unique id for operation tracking
              Location:
                example: /self-assessment/ni/{nino}/uk-properties
                description: Location of the resource created
          400:
            body:
              application/json:
                type: types.errorResponse
                examples:
                  invalidNino:
                    description: Invalid NINO
                    value:
                      code: NINO_INVALID
                  invalidValue:
                    description: Invalid accounting type
                    value:
                      code: INVALID_VALUE
          409:
            headers:
              Location:
                example: /self-assessment/ni/{nino}/uk-properties
            body:
              application/json:
                type: !include schemas/Error.json
                example: !include examples/errors/CONFLICT.json
      get:
        displayName: Get a UK property business
        description: Get a UK property business
        (annotations.sandboxData): !include scenarios/agent-scenarios.md
        is: [headers.acceptHeader, agentSubscription, clientSubscriptionToMTD, testScenarioHeader]
        (annotations.scope): "read:self-assessment"
        securedBy: [ sec.oauth_2_0: { scopes: [ "read:self-assessment" ] } ]
        responses:
          200:
            headers:
              X-CorrelationId:
                example: 5968c22d620000620096db10
                description: Unique id for operation tracking
            body:
              application/json:
                type: !include schemas/UkProperties.json
                example: !include examples/uk-properties/UkProperties.json
          400:
            body:
              application/json:
                type: types.errorResponse
                examples:
                  invalidNino:
                    description: Invalid NINO
                    value:
                      code: NINO_INVALID
          404:
      /obligations:
        get:
          displayName: Retrieve all UK property business obligations
          description: Retrieve all UK property business obligations. In sandbox environment, different scenarios for this endpoint can be simulated using 'Gov-Test-Scenario' header.
          (annotations.sandboxData): !include scenarios/property-obligation-scenarios.md
          is: [headers.acceptHeader, agentSubscription, clientSubscriptionToMTD, testScenarioHeader]
          (annotations.scope): "read:self-assessment"
          securedBy: [ sec.oauth_2_0: { scopes: [ "read:self-assessment" ] } ]
          responses:
            200:
              headers:
                X-CorrelationId:
                  example: 5968c22d620000620096db11
                  description: Unique id for operation tracking
              body:
                application/json:
                  type: !include schemas/Obligations.json
                  example: !include examples/Obligations.json
            400:
              body:
                application/json:
                  type: types.errorResponse
                  examples:
                    invalidNino:
                      description: Invalid NINO
                      value:
                        code: NINO_INVALID
            404:
      /other:
        /periods:
          post:
            displayName: Create a non-FHL UK property update period
            description: Create a non-FHL UK property update period for submission of periodic data i.e incomes and expenses.
                         Submissions  which do not include any incomes or expenses are invalid.
                         You should submit zero values if you do not have incomes or expenses.
                         <br><br><b>Valid payload may contain either expenses or consolidatedExpenses elements.</b>
            (annotations.sandboxData): !include scenarios/agent-scenarios.md
            is: [headers.acceptHeader, contentType, agentSubscription, clientSubscriptionToMTD, periodBVRs]
            (annotations.scope): "write:self-assessment"
            securedBy: [ sec.oauth_2_0: { scopes: [ "write:self-assessment" ] } ]
            body:
              application/json:
                type: !include schemas/UK_PROP_OTHER_Period_Without_ID.json
                examples:
                 example-1:
                  description: Full expense details example
                  value: !include examples/uk-properties/other/Period.json
                 example-2:
                  description: Consolidated expenses example
                  value: !include examples/uk-properties/other/Period2.json
            responses:
              201:
                headers:
                  X-CorrelationId:
                    example: 5968c22d620000620096db11
                    description: Unique id for operation tracking
                  Location:
                    example: /self-assessment/ni/{nino}/uk-properties/{propertyType}/periods/{periodId}
                    description: Location of the resource created
              400:
                body:
                  application/json:
                    type: types.errorResponse
                    examples:
                      invalidNino:
                        description: Invalid NINO
                        value:
                          code: NINO_INVALID
                      mandatoryField:
                        description: Mandatory field missing (from and to fields)
                        value:
                          code: MANDATORY_FIELD_MISSING
                      invalidDate:
                        description: Non ISO format date (from and to fields)
                        value:
                          code: INVALID_DATE
                      invalidPeriod:
                        description: The period 'from' date should come before the 'to' date
                        value:
                          code: INVALID_PERIOD
                      invalidMonetaryAmount:
                        description: income or expense is not a non-negative amount or up to 2 decimal places
                        value:
                          code: INVALID_MONETARY_AMOUNT
                      noIncomesAndExpenses:
                        description: No incomes and expenses are supplied
                        value:
                          code: NO_INCOMES_AND_EXPENSES
                      bothExpensesSupplied:
                        description: Both expenses and consolidatedExpenses can not be present at the same time
                        value:
                          code: BOTH_EXPENSES_SUPPLIED
              403:
                body:
                  application/json:
                    type: types.errorResponse
                    examples:
                      notAllowedConsolidatedExpenses:
                        description: Consolidated expenses are not allowed if the accumulative turnover amount exceeds the threshold
                        value:
                          code: NOT_ALLOWED_CONSOLIDATED_EXPENSES
          get:
            displayName: List all non-FHL UK property update periods
            description: List all non-FHL UK property update periods.
            (annotations.sandboxData): !include scenarios/agent-scenarios.md
            is: [headers.acceptHeader, agentSubscription, clientSubscriptionToMTD, testScenarioHeader]
            (annotations.scope): "read:self-assessment"
            securedBy: [ sec.oauth_2_0: { scopes: [ "read:self-assessment" ] } ]
            responses:
              200:
                headers:
                  X-CorrelationId:
                    example: 5968c22d620000620096db14
                    description: Unique id for operation tracking
                body:
                  application/json:
                    type: !include schemas/Periods.json
                    example: !include examples/Periods.json
              400:
                body:
                  application/json:
                    type: types.errorResponse
                    examples:
                      invalidNino:
                        description: Invalid NINO
                        value:
                          code: NINO_INVALID
              404:
          /{periodId}:
            uriParameters:
              periodId:
                displayName: Update period ID
                description: An identifier for the period
                type: string
            get:
              displayName: Get a non-FHL UK property update period
              description: Get a non-FHL UK property update period for a given identifier.
              (annotations.sandboxData): !include scenarios/agent-scenarios.md
              is: [headers.acceptHeader, agentSubscription, clientSubscriptionToMTD, testScenarioHeader]
              (annotations.scope): "read:self-assessment"
              securedBy: [ sec.oauth_2_0: { scopes: [ "read:self-assessment" ] } ]
              responses:
                200:
                  headers:
                    X-CorrelationId:
                      example: 5968c22d620000620096db15
                      description: Unique id for operation tracking
                  body:
                    application/json:
                      type: !include schemas/UK_PROP_OTHER_Period_Without_ID.json
                      examples:
                        example-1:
                          description: Periodic update with full expense details example
                          value: !include examples/uk-properties/other/Period.json
                        example-2:
                          description: Periodic update with consolidated expenses example
                          value: !include examples/uk-properties/other/Period2.json
                400:
                  body:
                    application/json:
                      type: types.errorResponse
                      examples:
                        invalidNino:
                          description: Invalid NINO
                          value:
                            code: NINO_INVALID
                404:
            put:
              displayName: Amend a non-FHL UK property periodic update
              description: Amend a non-FHL UK property periodic update.
                           Submissions  which do not include any incomes or expenses are invalid.
                           You should submit zero values if you do not have incomes or expenses.
                           <br><br><b>Valid payload may contain either expenses or consolidatedExpenses elements.</b>
              (annotations.sandboxData): !include scenarios/agent-scenarios.md
              is: [headers.acceptHeader, contentType, agentSubscription, clientSubscriptionToMTD, testScenarioHeader]
              (annotations.scope): "write:self-assessment"
              securedBy: [ sec.oauth_2_0: { scopes: [ "write:self-assessment" ] } ]
              body:
                application/json:
                  type: !include schemas/UK_PROP_OTHER_UpdatePeriod.json
                  examples:
                    example-1:
                      description: Periodic update with full expense details example
                      value: !include examples/uk-properties/other/UpdatePeriod.json
                    example-2:
                      description: Periodic update with consolidated expenses example
                      value: !include examples/uk-properties/other/UpdatePeriod2.json
              responses:
                204:
                  headers:
                    X-CorrelationId:
                      example: 5968c22d620000620096db16
                      description: Unique id for operation tracking
                400:
                  body:
                    application/json:
                      type: types.errorResponse
                      examples:
                        invalidNino:
                          description: The format of the given National Insurance number is invalid.
                          value:
                            code: NINO_INVALID
                        invalidMonetaryAmount:
                          description: income or expense is not a non-negative amount or up to 2 decimal places
                          value:
                            code: INVALID_MONETARY_AMOUNT
                        noIncomesAndExpenses:
                          description: No incomes and expenses are supplied
                          value:
                            code: NO_INCOMES_AND_EXPENSES
                        bothExpensesSupplied:
                          description: Both expenses and consolidatedExpenses can not be present at the same time
                          value:
                            code: BOTH_EXPENSES_SUPPLIED
                403:
                  body:
                    application/json:
                      type: types.errorResponse
                      examples:
                        notAllowedConsolidatedExpenses:
                          description: Consolidated expenses are not allowed if the accumulative turnover amount exceeds the threshold
                          value:
                            code: NOT_ALLOWED_CONSOLIDATED_EXPENSES
                404:
        /{taxYear}:
            displayName: Annual Summary
            uriParameters:
              taxYear:
                description: The tax year to which the data applies.
                type: string
                example: 2017-18
            put:
              displayName: Amend a non-FHL UK property business annual summary
              description: Amend a non-FHL UK property business annual summary for a tax year.
              (annotations.sandboxData): !include scenarios/agent-scenarios.md
              is: [headers.acceptHeader, agentSubscription, clientSubscriptionToMTD, contentType, testScenarioHeader]
              (annotations.scope): "write:self-assessment"
              securedBy: [ sec.oauth_2_0: { scopes: [ "write:self-assessment" ] } ]
              body:
                application/json:
                  type: !include schemas/UK_PROP_OTHER_AnnualSummary.json
                  example: !include examples/uk-properties/other/AnnualSummary.json
              responses:
                204:
                  headers:
                    X-CorrelationId:
                      example: 5968c22d620000620096db17
                      description: Unique id for operation tracking
                400:
                  body:
                    application/json:
                      type: types.errorResponse
                      examples:
                        invalidNino:
                          description: The format of the given National Insurance number is invalid.
                          value:
                            code: NINO_INVALID
                        invalidTaxYear:
                          description: The format of the given tax year is invalid.
                          value:
                            code: TAX_YEAR_INVALID
                        invalidMonetaryAmount:
                          description: Adjustments or allowances are non-negative amounts up to 2 decimal places
                          value:
                            code: INVALID_MONETARY_AMOUNT
                404:
            get:
              displayName: Get a non-FHL UK property business annual summary
              description: Get a non-FHL UK property business annual summary for a tax year.
              (annotations.sandboxData): !include scenarios/agent-scenarios.md
              is: [headers.acceptHeader, agentSubscription, clientSubscriptionToMTD, contentType, testScenarioHeader]
              (annotations.scope): "read:self-assessment"
              securedBy: [ sec.oauth_2_0: { scopes: [ "read:self-assessment" ] } ]
              responses:
                200:
                  headers:
                    X-CorrelationId:
                      example: 5968c22d620000620096db18
                      description: Unique id for operation tracking
                  body:
                    application/json:
                      type: !include schemas/UK_PROP_OTHER_AnnualSummary.json
                      example: !include examples/uk-properties/other/AnnualSummary.json
                400:
                  body:
                    application/json:
                      type: types.errorResponse
                      examples:
                        invalidNino:
                          description: The format of the given National Insurance number is invalid.
                          value:
                            code: NINO_INVALID
                        invalidTaxYear:
                          description: The format of the given tax year is invalid.
                          value:
                            code: TAX_YEAR_INVALID
                404:
      /furnished-holiday-lettings:
        /periods:
          post:
            displayName: Create a FHL UK property update period
            description: Create a FHL UK property update period for submission of periodic data i.e incomes and expenses.
                         Submissions which do not include any incomes or expenses are invalid.
                         You should submit zero values if you do not have incomes or expenses.
                         <br><br><b>Valid payload may contain either expenses or consolidatedExpenses elements.</b>
            (annotations.sandboxData): !include scenarios/agent-scenarios.md
            is: [headers.acceptHeader, contentType, agentSubscription, clientSubscriptionToMTD, periodBVRs]
            (annotations.scope): "write:self-assessment"
            securedBy: [ sec.oauth_2_0: { scopes: [ "write:self-assessment" ] } ]
            body:
              application/json:
                type: !include schemas/UK_PROP_FHL_Period_Without_ID.json
                examples:
                 example-1:
                  description: Full expense details example
                  value: !include examples/uk-properties/fhl/Period.json
                 example-2:
                  description: Consolidated expenses example
                  value: !include examples/uk-properties/fhl/Period2.json
            responses:
              201:
                headers:
                  X-CorrelationId:
                    example: 5968c22d620000620096db12
                    description: Unique id for operation tracking
                  Location:
                    example: /self-assessment/ni/{nino}/uk-properties/{propertyType}/periods/{periodId}
                    description: Location of the resource created
              400:
                body:
                  application/json:
                    type: types.errorResponse
                    examples:
                      invalidNino:
                        description: Invalid NINO
                        value:
                          code: NINO_INVALID
                      mandatoryField:
                        description: Mandatory field missing (from and to fields)
                        value:
                          code: MANDATORY_FIELD_MISSING
                      invalidDate:
                        description: Non ISO format date (from and to fields)
                        value:
                          code: INVALID_DATE
                      invalidPeriod:
                        description: The period 'from' date should come before the 'to' date
                        value:
                          code: INVALID_PERIOD
                      invalidMonetaryAmount:
                        description: income or expense is not a non-negative amount or up to 2 decimal places
                        value:
                          code: INVALID_MONETARY_AMOUNT
                      noIncomesAndExpenses:
                        description: No incomes and expenses are supplied
                        value:
                          code: NO_INCOMES_AND_EXPENSES
                      bothExpensesSupplied:
                        description: Both expenses and consolidatedExpenses can not be present at the same time
                        value:
                          code: BOTH_EXPENSES_SUPPLIED
              403:
                body:
                  application/json:
                    type: types.errorResponse
                    examples:
                      notAllowedConsolidatedExpenses:
                        description: Consolidated expenses are not allowed if the accumulative turnover amount exceeds the threshold
                        value:
                          code: NOT_ALLOWED_CONSOLIDATED_EXPENSES
          get:
            displayName: List all FHL UK property update periods
            description: List all FHL UK property update periods.
            (annotations.sandboxData): !include scenarios/agent-scenarios.md
            is: [headers.acceptHeader, agentSubscription, clientSubscriptionToMTD, testScenarioHeader]
            (annotations.scope): "read:self-assessment"
            securedBy: [ sec.oauth_2_0: { scopes: [ "read:self-assessment" ] } ]
            responses:
              200:
                headers:
                  X-CorrelationId:
                    example: 5968c22d620000620096db13
                    description: Unique id for operation tracking
                body:
                  application/json:
                    type: !include schemas/Periods.json
                    example: !include examples/Periods.json
              400:
                body:
                  application/json:
                    type: types.errorResponse
                    examples:
                      invalidNino:
                        description: Invalid NINO
                        value:
                          code: NINO_INVALID
              404:
          /{periodId}:
            uriParameters:
              periodId:
                displayName: Update period ID
                description: An identifier for the period
                type: string
            get:
              displayName: Get a FHL UK property update period
              description: Get a FHL UK property update period for a given identifier.
              (annotations.sandboxData): !include scenarios/agent-scenarios.md
              is: [headers.acceptHeader, agentSubscription, clientSubscriptionToMTD, testScenarioHeader]
              (annotations.scope): "read:self-assessment"
              securedBy: [ sec.oauth_2_0: { scopes: [ "read:self-assessment" ] } ]
              responses:
                200:
                  headers:
                    X-CorrelationId:
                      example: 5968c22d620000620096db14
                      description: Unique id for operation tracking
                  body:
                    application/json:
                      type: !include schemas/UK_PROP_FHL_Period_Without_ID.json
                      examples:
                        example-1:
                          description: Periodic update with full expense details example
                          value: !include examples/uk-properties/fhl/Period.json
                        example-2:
                          description: Periodic update with consolidated expenses example
                          value: !include examples/uk-properties/fhl/Period2.json
                400:
                  body:
                    application/json:
                      type: types.errorResponse
                      examples:
                        invalidNino:
                          description: Invalid NINO
                          value:
                            code: NINO_INVALID
                404:
            put:
              displayName: Amend a FHL UK property periodic update
              description: Amend a FHL UK property periodic update.
                           Submissions which do not include any incomes or expenses are invalid.
                           You should submit zero values if you do not have incomes or expenses.
                           <br><br><b>Valid payload may contain either expenses or consolidatedExpenses elements.</b>
              (annotations.sandboxData): !include scenarios/agent-scenarios.md
              is: [headers.acceptHeader, contentType, agentSubscription, clientSubscriptionToMTD, testScenarioHeader]
              (annotations.scope): "write:self-assessment"
              securedBy: [ sec.oauth_2_0: { scopes: [ "write:self-assessment" ] } ]
              body:
                application/json:
                  type: !include schemas/UK_PROP_FHL_UpdatePeriod.json
                  examples:
                    example-1:
                      description: Periodic update with full expense details example
                      value: !include examples/uk-properties/fhl/UpdatePeriod.json
                    example-2:
                      description: Periodic update with consolidated expenses example
                      value: !include examples/uk-properties/fhl/UpdatePeriod2.json
              responses:
                204:
                  headers:
                    X-CorrelationId:
                      example: 5968c22d620000620096db15
                      description: Unique id for operation tracking
                400:
                  body:
                    application/json:
                      type: types.errorResponse
                      examples:
                        invalidNino:
                          description: Invalid NINO
                          value:
                            code: NINO_INVALID
                        invalidTaxYear:
                          description: Invalid taxYear
                          value:
                            code: TAX_YEAR_INVALID
                        invalidMonetaryAmount:
                          description: adjustments or allowances is not a non-negative amount or up to 2 decimal places
                          value:
                            code: INVALID_MONETARY_AMOUNT
                        noIncomesAndExpenses:
                          description: No incomes and expenses are supplied
                          value:
                            code: NO_INCOMES_AND_EXPENSES
                        bothExpensesSupplied:
                          description: Both expenses and consolidatedExpenses can not be present at the same time
                          value:
                            code: BOTH_EXPENSES_SUPPLIED
                403:
                  body:
                    application/json:
                      type: types.errorResponse
                      examples:
                        notAllowedConsolidatedExpenses:
                          description: Consolidated expenses are not allowed if the accumulative turnover amount exceeds the threshold
                          value:
                            code: NOT_ALLOWED_CONSOLIDATED_EXPENSES
                404:
        /{taxYear}:
            displayName: Annual Summary
            uriParameters:
              taxYear:
                description: The tax year the data applies to
                type: string
                example: 2017-18
            put:
              displayName: Amend a FHL UK property business annual summary
              description: Amend a FHL UK property business annual summary for a tax year.
              (annotations.sandboxData): !include scenarios/agent-scenarios.md
              is: [headers.acceptHeader, contentType, agentSubscription, clientSubscriptionToMTD, testScenarioHeader]
              (annotations.scope): "write:self-assessment"
              securedBy: [ sec.oauth_2_0: { scopes: [ "write:self-assessment" ] } ]
              body:
                application/json:
                  type: !include schemas/UK_PROP_FHL_AnnualSummary.json
                  example: !include examples/uk-properties/fhl/AnnualSummary.json
              responses:
                204:
                  headers:
                    X-CorrelationId:
                      example: 5968c22d620000620096db16
                      description: Unique id for operation tracking
                400:
                  body:
                    application/json:
                      type: types.errorResponse
                      examples:
                        invalidNino:
                          description: Invalid NINO
                          value:
                            code: NINO_INVALID
                        invalidTaxYear:
                          description: Invalid taxYear
                          value:
                            code: TAX_YEAR_INVALID
                        invalidMonetaryAmount:
                          description: Adjustments or allowances is not a non-negative amount or up to 2 decimal places
                          value:
                            code: INVALID_MONETARY_AMOUNT
                        invalidPeriodOfGraceAdjustment:
                          description: Invalid period of grace adjustment
                          value:
                            code: INVALID_BOOLEAN_VALUE
                404:
            get:
              displayName: Get a FHL UK property business annual summary
              description: Get a FHL UK property business annual summary for a tax year.
              (annotations.sandboxData): !include scenarios/agent-scenarios.md
              is: [headers.acceptHeader, agentSubscription, clientSubscriptionToMTD, testScenarioHeader]
              (annotations.scope): "read:self-assessment"
              securedBy: [ sec.oauth_2_0: { scopes: [ "read:self-assessment" ] } ]
              responses:
                200:
                  headers:
                    X-CorrelationId:
                      example: 5968c22d620000620096db17
                      description: Unique id for operation tracking
                  body:
                    application/json:
                      type: !include schemas/UK_PROP_FHL_AnnualSummary.json
                      example: !include examples/uk-properties/fhl/AnnualSummary.json
                400:
                  body:
                    application/json:
                      type: types.errorResponse
                      examples:
                        invalidNino:
                          description: Invalid NINO
                          value:
                            code: NINO_INVALID
                        invalidTaxYear:
                          description: Invalid taxYear
                          value:
                            code: TAX_YEAR_INVALID
                404:
      /end-of-period-statements:
        /from:
          /{start}:
            /to:
              /{end}:
                uriParameters:
                  start:
                    description: Valid ISO 8601 date for the start of the accounting period
                    type: string
                    example: 2017-04-06
                  end:
                    description: Valid ISO 8601 date for the end of the accounting period
                    type: string
                    example: 2018-04-05
                post:
                  displayName: Submit UK Property End-of-Period Statement
                  description: Use this endpoint to finalise the end-of-period statement, for this accounting period, for a UK property business.
                  (annotations.sandboxData): !include scenarios/uk-prop-declaration-scenarios.md
                  is: [headers.acceptHeader, contentType, clientOrAgentNotAuthorised, testScenarioHeader]
                  (annotations.scope): "write:self-assessment"
                  securedBy: [ sec.oauth_2_0: { scopes: [ "write:self-assessment" ] } ]
                  body:
                    application/json:
                      type: !include schemas/Declaration.json
                      example: !include examples/uk-properties/Declaration.json
                  responses:
                    204:
                      body:
                        application/json:
                          type:
                          examples:
                            example-1:
                              description: Successful submission returns an empty body.
                              value: ""
                    400:
                      body:
                        application/json:
                          type: types.errorResponse
                          examples:
                            invalidNino:
                              description: The format of the National Insurance number is invalid.
                              value:
                                code: FORMAT_NINO
                            invalidStartDate:
                              description: The start date must be on or after 6th April 2017.
                              value:
                                code: FORMAT_START_DATE
                            invalidEndDate:
                              description: Invalid account period end date
                              value:
                                code: FORMAT_END_DATE
                            invalidDateRange:
                              description: The date range for the accounting period is invalid, for example the start date is after the end date.
                              value:
                                code: RANGE_INVALID
                    403:
                      body:
                        application/json:
                          type: types.errorResponse
                          examples:
                            notFinalised:
                              description: Statement not declared as finalised.
                              value:
                                code: RULE_NOT_FINALISED
                            alreadySubmitted:
                              description: You cannot submit a statement for the same accounting period twice.
                              value:
                                code: RULE_ALREADY_SUBMITTED
                            earlySubmission:
                              description: You cannot submit a statement before the end of your accounting period.
                              value:
                                code: RULE_EARLY_SUBMISSION
                            lateSubmission:
                              description: The period to finalise has passed.
                              value:
                                code: RULE_LATE_SUBMISSION
                            consolidatedExpenses:
                              description: Consolidated expenses are not allowed if the cumulative turnover amount exceeds the threshold.
                              value:
                                code: RULE_CONSOLIDATED_EXPENSES
                            class4Over16:
                              description: Class 4 exemption is not allowed because the individual’s age is greater than or equal to 16 years old on the 6th April of the current tax year.
                              value:
                                code: RULE_CLASS4_OVER_16
                            class4PensionAge:
                              description: Class 4 exemption is not allowed because the individual's age is less than their State Pension age on the 6th April of the current tax year.
                              value:
                                code: RULE_CLASS4_PENSION_AGE
                            fhlPrivateUse:
                              description: For UK Furnished Holiday Lettings, the private use adjustment must not exceed the total allowable expenses.
                              value:
                                code: RULE_FHL_PRIVATE_USE_ADJUSTMENT
                            nonFhlPrivateUse:
                              description: For UK non-Furnished Holiday Lettings, the private use adjustment must not exceed the total allowable expenses.
                              value:
                                code: RULE_NON_FHL_PRIVATE_USE_ADJUSTMENT
                            accountingPeriodStartDate:
                              description: The period submission start date must match the accounting period start date.
                              value:
                                code: RULE_ACCOUNTING_PERIOD_START_DATE
                            accountingPeriodEndDate:
                              description: The period submission end date must match the accounting period end date.
                              value:
                                code: RULE_ACCOUNTING_PERIOD_END_DATE
                    404:
                      body:
                        application/json:
                          type: types.errorResponse
                          examples:
                            notFound:
                              description: No submission data exists for the accounting period.
                              value:
                                code: MATCHING_RESOURCE_NOT_FOUND
        /obligations:
                    get:
                      displayName: Retrieve End of Period Statement Obligations for a UK Property Business
                      description: Use this endpoint to retrieve the End of Period Statement (EOPS) of obligations for a UK property business. In the sandbox environment, this endpoint returns pre-defined responses that are representative of what may be returned in production.
                      (annotations.sandboxData): !include scenarios/eops-property-obligation-scenarios.md
                      is: [headers.acceptHeader, contentType, clientOrAgentNotAuthorised, testScenarioHeader]
                      (annotations.scope): "read:self-assessment"
                      securedBy: [ sec.oauth_2_0: { scopes: [ "read:self-assessment" ] } ]
                      queryParameters:
                        from:
                          description: The start date of the range by which to filter obligations, in the format YYYY-MM-DD.
                          type: string
                          example: 2017-04-06
                          required: true
                        to:
                          description: The end date of the range by which to filter obligations, in the format YYYY-MM-DD.
                          type: string
                          example: 2018-04-05
                          required: true
                      responses:
                        200:
                          headers:
                            X-CorrelationId:
                              example: 5968c22d620000620096db59
                              description: Unique ID for operation-tracking
                          body:
                            application/json:
                              type: !include schemas/Obligations-Eops-Property.json
                              examples:
                                example-1:
                                  description: Open obligation
                                  value: !include examples/obligations-eops/Obligations-Eops-Open.json
                                example-2:
                                  description: Fulfilled obligation
                                  value: !include examples/obligations-eops/Obligations-Eops-Fulfilled.json
                        400:
                          body:
                            application/json:
                              type: types.errorResponse
                              examples:
                                invalidNino:
                                  description: The format of the National Insurance number is invalid.
                                  value:
                                    code: FORMAT_NINO
                                invalidFromDate:
                                  description: The From date is not a valid ISO format date.
                                  value:
                                    code: FORMAT_FROM_DATE
                                invalidToDate:
                                  description: The To date is not a valid ISO format date.
                                  value:
                                    code: FORMAT_TO_DATE
                                missingFromDate:
                                  description: The From date parameter is missing.
                                  value:
                                    code: MISSING_FROM_DATE
                                missingToDate:
                                  description: The To date parameter is missing.
                                  value:
                                    code: MISSING_TO_DATE
                                rangeToDateBeforeFrom:
                                  description: The To date is before the From date.
                                  value:
                                    code: RANGE_TO_DATE_BEFORE_FROM_DATE
                                rangeDateTooLong:
                                  description: The date range is longer than 366 days.
                                  value:
                                    code: RANGE_DATE_TOO_LONG
                        404:
                          body:
                            type: types.errorResponse
                            examples:
                              resourceNotFound:
                                description: Resource not found.
                                value:
                                  code: MATCHING_RESOURCE_NOT_FOUND
      /{taxYear}/income-summary:
        uriParameters:
          taxYear:
            description: The tax year to which the data applies.
            type: string
            example: 2017-18
        get:
          displayName:  Get UK property Business Income Source Summary (BISS)
          description: Get the summary of property income for a given tax year. This API is not available in production.
          (annotations.sandboxData): !include scenarios/uk-properties-biss.md
          is: [headers.acceptHeader, contentType, agentSubscription, clientSubscriptionToMTD, testScenarioHeader]
          (annotations.scope): "read:self-assessment"
          securedBy: [ sec.oauth_2_0: { scopes: [ "read:self-assessment" ] } ]
          responses:
            200:
              headers:
                X-CorrelationId:
                  example: 5968c22d620000620096db51
                  description: Unique id for operation tracking
              body:
                application/json:
                  type: !include schemas/uk-properties/BISS/BISS.json
                  examples:
                   example-1:
                    description: >
                      Scenario: Net profit, taxable loss
                    value: !include examples/uk-properties/BISS/net_profit.json
                   example-2:
                    description: >
                      Scenario: Net loss, taxable profit
                    value: !include examples/uk-properties/BISS/net_loss.json
            400:
              body:
                application/json:
                  type: types.errorResponse
                  examples:
                    invalidNino:
                      description: The format of the given National Insurance number is invalid.
                      value:
                        code: NINO_INVALID
                    invalidTaxYear:
                      description: The format of the given tax year is invalid.
                      value:
                        code: TAX_YEAR_INVALID
            404:
              body:
                application/json:
                  type: types.errorResponse
                  examples:
                    noSubmissionData:
                      description: No submission data exists for the accounting period.
                      value:
                        code: NOT_FOUND
    /dividends:
      (annotations.group):
        name: Dividends income
        description: !include docs/dividends-income.md
      /{taxYear}:
        displayName: Annual Summary
        uriParameters:
          taxYear:
            description: The tax year the data applies to, for example, 2017-18. The start year and end year must not span two tax years. No gaps are allowed, for example, 2017-19 is not valid. The minimum tax year is 2016-17.
            type: string
            example: 2017-18
        put:
          displayName: Amend a UK dividends income annual summary [test only]
          description: Amend a UK dividends income annual summary for a tax year. This API is not available in production.
          (annotations.sandboxData): !include scenarios/dividends-update-scenarios.md
          is: [headers.acceptHeader, contentType, clientOrAgentNotAuthorised, testScenarioHeader]
          (annotations.scope): "write:self-assessment"
          securedBy: [ sec.oauth_2_0: { scopes: [ "write:self-assessment" ] } ]
          body:
            application/json:
              type: !include schemas/DIV_AnnualSummary.json
              examples:
               example-1:
                description: >
                  Dividends with both fields populated
                value: !include examples/dividends/AnnualSummary.json
               example-2:
                description: >
                  Example 1 of how to remove previously submitted values
                value: !include examples/dividends/AnnualSummaryZeros1.json
               example-3:
                description: >
                  Example 2 of how to remove previously submitted values
                value: !include examples/dividends/AnnualSummaryZeros2.json
          responses:
            204:
            400:
              body:
                application/json:
                  type: types.errorResponse
                  examples:
                    formatNino:
                      description: The format of the supplied NINO is not valid.
                      value:
                        code: FORMAT_NINO
                    formatTaxYear:
                      description: The format of the supplied tax year is not valid.
                      value:
                        code: FORMAT_TAX_YEAR
                    formatUkDividends:
                      description: The format of the UK Dividends total is not valid.
                      value:
                        code: FORMAT_UK_DIVIDENDS
                    formatOtherDividends:
                      description: The format of the Other UK Dividends total is not valid.
                      value:
                        code: FORMAT_OTHER_DIVIDENDS
            403:
              body:
                application/json:
                  type: types.errorResponse
                  examples:
                    ruleTaxYear:
                      description: The specified tax year is not supported; that is, the tax year specified is before the minimum tax year value.
                      value:
                        code: RULE_TAX_YEAR_NOT_SUPPORTED
        get:
          displayName: Retrieve a UK dividends income annual summary [test only]
          description: Retrieve a UK dividends income annual summary for a tax year. This API is not available in production.
          (annotations.sandboxData): !include scenarios/dividends-retrieve-scenarios.md
          is: [headers.acceptHeader, clientOrAgentNotAuthorised, testScenarioHeader]
          (annotations.scope): "read:self-assessment"
          securedBy: [ sec.oauth_2_0: { scopes: [ "read:self-assessment" ] } ]
          responses:
            200:
              body:
                application/json:
                  type: !include schemas/DIV_AnnualSummary.json
                  examples:
                   example-1:
                    description: >
                      Dividends with both fields populated
                    value: !include examples/dividends/GetAnnualSummary.json
            400:
              body:
                application/json:
                  type: types.errorResponse
                  examples:
                    formatNino:
                      description: The format of the supplied NINO is not valid.
                      value:
                        code: FORMAT_NINO
                    formatTaxYear:
                      description: The format of the supplied tax year is not valid.
                      value:
                        code: FORMAT_TAX_YEAR
                    ruleTaxYear:
                      description: The specified tax year is not supported, i.e the tax year specified is before the minimum tax year value.
                      value:
                        code: RULE_TAX_YEAR_NOT_SUPPORTED
            404:
              body:
                application/json:
                  type: types.errorResponse
                  examples:
                    notFound:
                      description: The matching resource is not found.
                      value:
                        code: MATCHING_RESOURCE_NOT_FOUND
    /savings-accounts:
      (annotations.group):
        name: Savings accounts
        description: !include docs/savings-accounts.md
      post:
        displayName: Add a savings account [test only]
        description: Add a savings account. This API is not available in production.
        (annotations.sandboxData): !include scenarios/agent-scenarios.md
        is: [headers.acceptHeader, contentType, agentSubscription, clientSubscriptionToMTD, testScenarioHeader]
        (annotations.scope): "write:self-assessment"
        securedBy: [ sec.oauth_2_0: { scopes: [ "write:self-assessment" ] } ]
        body:
          application/json:
            type: !include schemas/SavingsAccount_Without_ID.json
            example: !include examples/savings-accounts/SavingsAccount.json
        responses:
          201:
            headers:
              Location:
                example: /self-assessment/ni/{nino}/savings-accounts/{savingsAccountId}
                description: Location of the resource created
          400:
            body:
              application/json:
                type: types.errorResponse
                examples:
                  invalidNino:
                    description: Invalid NINO
                    value:
                      code: NINO_INVALID
                  invalidLength:
                    description: accountName length is invalid
                    value:
                      code: INVALID_FIELD_LENGTH
                  invalidValue:
                    description: accountName is not alphanumeric
                    value:
                      code: INVALID_VALUE
      get:
        displayName: List all savings accounts [test only]
        description: List all savings accounts. This API is not available in production.
        (annotations.sandboxData): !include scenarios/agent-scenarios.md
        is: [headers.acceptHeader, agentSubscription, clientSubscriptionToMTD, testScenarioHeader]
        (annotations.scope): "read:self-assessment"
        securedBy: [ sec.oauth_2_0: { scopes: [ "read:self-assessment" ] } ]
        responses:
          200:
            body:
              application/json:
                type: !include schemas/SavingsAccounts.json
                example: !include examples/savings-accounts/SavingsAccounts.json
          400:
            body:
              application/json:
                type: types.errorResponse
                examples:
                  invalidNino:
                    description: Invalid NINO
                    value:
                      code: NINO_INVALID
      /{savingsAccountId}:
        put:
          displayName: Update a savings account [test only]
          description: Update a savings account. This API is not available in production.
          (annotations.sandboxData): !include scenarios/agent-scenarios.md
          is: [headers.acceptHeader, contentType, agentSubscription, clientSubscriptionToMTD, testScenarioHeader]
          (annotations.scope): "write:self-assessment"
          securedBy: [ sec.oauth_2_0: { scopes: [ "write:self-assessment" ] } ]
          body:
            application/json:
              type: !include schemas/SavingsAccount_Without_ID.json
              example: !include examples/savings-accounts/SavingsAccount.json
          responses:
            204:
            400:
              body:
                application/json:
                  type: types.errorResponse
                  examples:
                    invalidNino:
                      description: Invalid NINO
                      value:
                        code: NINO_INVALID
                    invalidLength:
                      description: accountName length is invalid
                      value:
                        code: INVALID_FIELD_LENGTH
                    invalidValue:
                      description: accountName is not alphanumeric
                      value:
                        code: INVALID_VALUE
            404:
        get:
          displayName: Get a savings account [test only]
          description: Get a savings account. This API is not available in production.
          (annotations.sandboxData): !include scenarios/agent-scenarios.md
          is: [headers.acceptHeader, agentSubscription, clientSubscriptionToMTD, testScenarioHeader]
          (annotations.scope): "read:self-assessment"
          securedBy: [ sec.oauth_2_0: { scopes: [ "read:self-assessment" ] } ]
          responses:
            200:
              body:
                application/json:
                  type: !include schemas/SavingsAccount_Without_ID.json
                  example: !include examples/savings-accounts/SavingsAccount.json
            400:
              body:
                application/json:
                  type: types.errorResponse
                  examples:
                    invalidNino:
                      description: Invalid NINO
                      value:
                        code: NINO_INVALID
            404:
        /{taxYear}:
          put:
            displayName: Update a savings account annual summary [test only]
            description: Update a savings account annual summary for a given tax year. This API is not available in production.
            (annotations.sandboxData): !include scenarios/agent-scenarios.md
            is: [headers.acceptHeader, contentType, agentSubscription, clientSubscriptionToMTD, testScenarioHeader]
            (annotations.scope): "write:self-assessment"
            securedBy: [ sec.oauth_2_0: { scopes: [ "write:self-assessment" ] } ]
            body:
              application/json:
                type: !include schemas/SavingsAccount_AnnualSummary.json
                example: !include examples/savings-accounts/AnnualSummary.json
            responses:
              204:
              400:
                body:
                  application/json:
                    type: types.errorResponse
                    examples:
                      invalidNino:
                        description: Invalid NINO
                        value:
                          code: NINO_INVALID
                      invalidTaxYear:
                        description: Invalid taxYear
                        value:
                          code: TAX_YEAR_INVALID
                      invalidAmount:
                        description: taxedUkInterest is not a non-negative amount or up to 2 decimal places
                        value:
                          code: INVALID_MONETARY_AMOUNT
              404:
          get:
            displayName: Get a savings account annual summary [test only]
            description: Get a savings account annual summary for a given tax year. This API is not available in production.
            (annotations.sandboxData): !include scenarios/agent-scenarios.md
            is: [headers.acceptHeader, agentSubscription, clientSubscriptionToMTD, testScenarioHeader]
            (annotations.scope): "read:self-assessment"
            securedBy: [ sec.oauth_2_0: { scopes: [ "read:self-assessment" ] } ]
            responses:
              200:
                body:
                  application/json:
                    type: !include schemas/SavingsAccount_AnnualSummary.json
                    example: !include examples/savings-accounts/AnnualSummary.json
              400:
                body:
                  application/json:
                    type: types.errorResponse
                    examples:
                      invalidNino:
                        description: Invalid NINO
                        value:
                          code: NINO_INVALID
                      invalidTaxYear:
                        description: Invalid taxYear
                        value:
                          code: TAX_YEAR_INVALID
              404:
    /calculations:
      (annotations.group):
        name: Tax calculations
        description: !include docs/tax-calculation.md
      post:
        displayName: Trigger a tax calculation
        description: Trigger a tax calculation.
        (annotations.sandboxData): !include scenarios/agent-scenarios.md
        is: [headers.acceptHeader, contentType, agentSubscription, clientSubscriptionToMTD, testScenarioHeader]
        (annotations.scope): "write:self-assessment"
        securedBy: [ sec.oauth_2_0: { scopes: [ "write:self-assessment" ] } ]
        body:
          application/json:
            type: !include schemas/TaxCalculationYear.json
            example: !include examples/calculation/TaxCalculationYear.json
        responses:
          202:
            headers:
              Location:
                example: /self-assessment/ni/{nino}/calculations/{calculationId}
                description: Location of the calculation result
            body:
              application/json:
                type: !include schemas/TaxCalculationETA.json
                example: !include examples/calculation/TaxCalculationETA.json
          400:
            body:
              application/json:
                type: types.errorResponse
                examples:
                  invalidNino:
                    description: Invalid NINO
                    value:
                      code: NINO_INVALID
                  mandatoryField:
                    description: Mandatory field missing
                    value:
                      code: MANDATORY_FIELD_MISSING
                  invalidTaxYear:
                    description: Invalid taxYear
                    value:
                      code: TAX_YEAR_INVALID
      /{calculationId}:
        uriParameters:
          calculationId:
            description: The ID of the tax calculation.<p>Must conform to the regular expression `^[0-9]{8}$|^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$`</p>
            type: string
            example: 041f7e4d-87d9-4d4a-a296-3cfbdf92f7e2
        get:
          displayName: Retrieve a tax calculation
          description: Use this endpoint to retrieve a tax calculation. In the sandbox environment, this endpoint returns pre-defined responses that are representative of what may be returned in production.
          (annotations.sandboxData): !include scenarios/tax-calculation-retrieve.md
          is: [headers.acceptHeader, clientOrAgentNotAuthorised, testScenarioHeader]
          (annotations.scope): "read:self-assessment"
          securedBy: [ sec.oauth_2_0: { scopes: [ "read:self-assessment" ] } ]
          responses:
            204:
              body:
                application/json:
                  examples:
                   example-1:
                    description: >
                      Scenario: The calculation is in progress. This will return an empty body
                    value: {}
            200:
              body:
                application/json:
                  type: !include schemas/TaxCalculation.json
                  examples:
                   example-1:
                    description: >
                      Scenario: Successful calculation
                    value: !include examples/calculation/TaxCalculation.json
                   example-2:
                    description: >
                      Scenario: Unsuccessful calculation due to business validation failure(s)
                    value: !include examples/calculation/TaxCalculationBvrErrors.json
            400:
              body:
                application/json:
                  type: types.errorResponse
                  examples:
                    invalidNino:
                      description: The format of the National Insurance number is invalid.
                      value:
                        code: FORMAT_NINO
                    invalidCalcId:
                      description: The format of the calculation ID is invalid.
                      value:
                        code: FORMAT_CALC_ID
            404:
              body:
                application/json:
                  type: types.errorResponse
                  examples:
                    notFound:
                      description: The matching resource is not found.
                      value:
                        code: MATCHING_RESOURCE_NOT_FOUND
        /validation-messages:
                get:
                  displayName: Retrieve validation messages associated with a tax calculation
                  description: Use this endpoint to retrieve the validation messages associated with a tax calculation. In the sandbox environment, this endpoint returns pre-defined responses that are representative of what may be returned in production.
                  (annotations.sandboxData): !include scenarios/tax-calculation-bvr.md
                  is: [headers.acceptHeader, clientOrAgentNotAuthorised, testScenarioHeader]
                  (annotations.scope): "read:self-assessment"
                  securedBy: [ sec.oauth_2_0: { scopes: [ "read:self-assessment" ] } ]
                  responses:
                    200:
                      body:
                        application/json:
                          type: !include schemas/TaxCalculationBvr.json
                          examples:
                           example-1:
                            description: >
                              Scenario: Warnings and errors returned for an unsuccessful calculation.
                            value: !include examples/calculation/TaxCalculationValidationMessages.json
                    204:
                      body:
                        application/json:
                          examples:
                           example-1:
                            description: >
                              Scenario: The calculation is in progress. This will return an empty body
                            value: {}
                    400:
                      body:
                        application/json:
                          type: types.errorResponse
                          examples:
                            invalidNino:
                              description: The format of the National Insurance number is invalid.
                              value:
                                code: FORMAT_NINO
                            invalidCalcId:
                              description: The format of the calculation ID is invalid.
                              value:
                                code: FORMAT_CALC_ID
                    404:
                      body:
                        application/json:
                          type: types.errorResponse
                          examples:
                            notFound:
                              description: The matching resource is not found.
                              value:
                                code: MATCHING_RESOURCE_NOT_FOUND
    /{taxYear}:
      uriParameters:
        taxYear:
          description: The tax year the data applies to
          type: string
          example: 2017-18
      (annotations.group):
        name: Crystallisation
        description: !include docs/crystallisation.md
      /intent-to-crystallise:
        post:
          displayName: Intent to crystallise
          description: !include docs/intent-to-crystallise.md
          (annotations.sandboxData): !include scenarios/intent-to-crystallise-scenarios.md
          is: [headers.acceptHeader, contentType, agentSubscription, clientSubscriptionToMTD, testScenarioHeader]
          (annotations.scope): "write:self-assessment"
          securedBy: [ sec.oauth_2_0: { scopes: [ "write:self-assessment" ] } ]
          headers:
          body:
            application/json:
              type: !include schemas/IntentToCrystallise.json
              example: !include examples/crystallisation/intentToCrystallise.json
          responses:
            303:
              headers:
                X-CorrelationId:
                  example: 5968c22d620000620096db10
                  description: Unique id for operation tracking
                Location:
                  example: /self-assessment/ni/{nino}/calculations/{calculationId}
                  description: Location of the calculation
            400:
              body:
                application/json:
                  type: types.errorResponse
                  examples:
                    invalidNino:
                      description: Invalid NINO
                      value:
                        code: NINO_INVALID
                    invalidTaxYear:
                      description: Invalid taxYear
                      value:
                        code: TAX_YEAR_INVALID
            403:
              body:
                application/json:
                  type: types.errorResponse
                  examples:
                    eopsNotCompleted:
                      description: End of Period Statement is Not Completed
                      value:
                        code: REQUIRED_END_OF_PERIOD_STATEMENT
      /crystallisation:
        post:
          displayName: Crystallisation
          description: !include docs/crystallisation-endpoint.md
          (annotations.sandboxData): !include scenarios/crystallisation-scenarios.md
          is: [headers.acceptHeader, contentType, agentSubscription, clientSubscriptionToMTD, testScenarioHeader]
          (annotations.scope): "write:self-assessment"
          securedBy: [ sec.oauth_2_0: { scopes: [ "write:self-assessment" ] } ]
          body:
            application/json:
              type: !include schemas/Crystallisation.json
              example: !include examples/crystallisation/crystallisation.json
          responses:
            201:
              headers:
                X-CorrelationId:
                  example: 5968c22d620000620096db10
                  description: Unique id for operation tracking
            400:
              body:
                application/json:
                  type: types.errorResponse
                  examples:
                    invalidNino:
                      description: Invalid NINO
                      value:
                        code: NINO_INVALID
                    invalidTaxYear:
                      description: Invalid taxYear
                      value:
                        code: TAX_YEAR_INVALID
                    mandatoryField:
                      description: Calculation ID is not provided
                      value:
                        code: MANDATORY_FIELD_MISSING
            403:
              body:
                application/json:
                  type: types.errorResponse
                  examples:
                    invalidCalcId:
                      description: Invalid Calculation ID
                      value:
                        code: INVALID_TAX_CALCULATION_ID
                    resubmitIntentToCrystallise:
                      description: Changes have been made, or a more recent submission exists.  Please resubmit Intent to Crystallise
                      value:
                        code: REQUIRED_INTENT_TO_CRYSTALLISE
    /charitable-giving:
      (annotations.group):
        name: Charitable giving
        description: !include docs/charitable-giving-payments.md
      /{taxYear}:
        displayName: Charitable giving payments for the tax year
        uriParameters:
          taxYear:
            description: The tax year the data applies to, for example, 2018-19. <br>The start year and end year must not span two tax years. No gaps are allowed, for example, 2017-19 is not valid. The minimum tax year is 2016-17.
            type: string
            example: 2018-19
        put:
          displayName: Amend charitable giving tax relief [test only]
          description: Amend charitable giving tax relief for a tax year. This API is not available in production.
          (annotations.sandboxData): !include scenarios/charitable-giving-amend-scenarios.md
          is: [headers.acceptHeader, contentType, clientOrAgentNotAuthorised, testScenarioHeader]
          (annotations.scope): "write:self-assessment"
          securedBy: [ sec.oauth_2_0: { scopes: [ "write:self-assessment" ] } ]
          body:
            application/json:
              type: !include schemas/CharitableGivings.json
              examples:
               example-1:
                description: >
                  Charitable giving with Non UK Charity donations
                value: !include examples/charitable-giving/CharitableGivings.json
               example-2:
                description: >
                  Example 1 of how to remove previously submitted values
                value: !include examples/charitable-giving/CharitableGivingsRemoveOne.json
               example-3:
                description: >
                  Example 2 of how to remove previously submitted values
                value: !include examples/charitable-giving/CharitableGivingsRemoveTwo.json
               example-4:
                description: >
                  Invalid request body example 1
                value: !include examples/charitable-giving/CharitableGivingsInvalidOne.json
               example-5:
                description: >
                  Invalid request body example 2
                value: !include examples/charitable-giving/CharitableGivingsInvalidTwo.json
          responses:
            204:
              headers:
                X-CorrelationId:
                  example: c75f40a6-a3df-4429-a697-471eeec46435
                  description: Unique id for operation tracking <br> String, 36 characters.
            400:
              body:
                application/json:
                  type: types.errorResponse
                  examples:
                    formatNino:
                      description: The format of the supplied NINO field is not valid.
                      value:
                        code: FORMAT_NINO
                    formatTaxYear:
                      description: The format of the supplied tax year field is not valid.
                      value:
                        code: FORMAT_TAX_YEAR
                    formatGiftAidSpecifiedYear:
                      description: The format of the specified year field is not valid.
                      value:
                        code: FORMAT_GIFT_AID_SPECIFIED_YEAR
                    formatGiftAidOneOffSpecifiedYear:
                      description: The format of the one-off specified year field is not valid.
                      value:
                        code: FORMAT_GIFT_AID_ONE_OFF_SPECIFIED_YEAR
                    formatGiftAidSpecifiedYearPreviousYear:
                      description: The format of the gift aid specified year treated as previous year field is not valid.
                      value:
                        code: FORMAT_GIFT_AID_SPECIFIED_YEAR_PREVIOUS_YEAR
                    formatGiftAidSpecifiedYearFollowingYear:
                      description: The format of the gift aid following year treated as specified year field is not valid.
                      value:
                        code: FORMAT_GIFT_AID_FOLLOWING_YEAR_SPECIFIED_YEAR
                    formatNonUkCharitiesAmount:
                      description: The format of the gift aid Non-UK charities amount field is not valid.
                      value:
                        code: FORMAT_GIFT_AID_NONUK_CHARITY_AMOUNT
                    formatNonUkCharityNames:
                      description: The format of the gift aid non-UK charity names is not valid.
                      value:
                        code: FORMAT_GIFT_AID_NONUK_NAMES
                    formatGiftsSharesSecurities:
                      description: The format of the gifts of shares or securities field is not valid.
                      value:
                        code: FORMAT_GIFTS_SHARES_SECURITIES
                    formatGiftsLandBuildings:
                      description: The format of the gifts of lands and buildings field is not valid.
                      value:
                        code: FORMAT_GIFTS_LAND_BUILDINGS
                    formatGiftsInvestmentsAmount:
                      description: The format of the gifts of investments field is not valid.
                      value:
                        code: FORMAT_GIFTS_INVESTMENTS_AMOUNT
                    formatGiftsNonUkInvestmentsNames:
                      description: The list of charity names, for investments gifted to non-UK charities, is not valid.
                      value:
                        code: FORMAT_GIFTS_NONUK_INVESTMENTS_NAMES
                    ruleNonUkAmountWithoutNames:
                      description: Non-UK charity gift aid amount supplied without the non-UK gift aid charity names.
                      value:
                        code: RULE_GIFT_AID_NONUK_AMOUNT_WITHOUT_NAMES
                    ruleNonUkNamesWithoutAmount:
                      description: Non-UK charity gift aid charity names supplied without an amount or the amount was zero.
                      value:
                        code: RULE_GIFT_AID_NONUK_NAMES_WITHOUT_AMOUNT
                    ruleNonUkInvestmentsWithoutNames:
                      description: Positive non-UK gift of investment amount supplied without non-UK gift of investment charity names.
                      value:
                        code: RULE_GIFTS_NONUK_INVESTMENTS_AMOUNT_WITHOUT_NAMES
                    ruleNonUkInvestmentsWithoutAmount:
                      description: Non-UK gift of investment charity names supplied without an amount or the amount was zero.
                      value:
                        code: RULE_GIFTS_NONUK_INVESTMENTS_NAMES_WITHOUT_AMOUNT
                    ruleTaxYearNotSupported:
                      description: The specified tax year is not supported, i.e the tax year specified is before the minimum tax year value.
                      value:
                        code: RULE_TAX_YEAR_NOT_SUPPORTED
        get:
          displayName: Retrieve charitable giving tax relief [test only]
          description: Retrieve charitable giving tax relief for a tax year. This API is not available in production.
          (annotations.sandboxData): !include scenarios/charitable-giving-view-scenarios.md
          is: [headers.acceptHeader, clientOrAgentNotAuthorised, testScenarioHeader]
          (annotations.scope): "read:self-assessment"
          securedBy: [ sec.oauth_2_0: { scopes: [ "read:self-assessment" ] } ]
          responses:
            200:
              headers:
                X-CorrelationId:
                  example: c75f40a6-a3df-4429-a697-471eeec46435
                  description: Unique id for operation tracking <br> String, 36 characters.
              body:
                application/json:
                  type: !include schemas/CharitableGivings.json
                  example: !include examples/charitable-giving/CharitableGivings.json
            400:
              body:
                application/json:
                  type: types.errorResponse
                  examples:
                    formatNino:
                      description: The format of the supplied NINO field is not valid.
                      value:
                          code: FORMAT_NINO
                    formatTaxYear:
                      description: The format of the supplied tax year field is not valid.
                      value:
                        code: FORMAT_TAX_YEAR
                    taxYearNotSupported:
                      description: The specified tax year is not supported, i.e the tax year specified is before the minimum tax year value.
                      value:
                        code: RULE_TAX_YEAR_NOT_SUPPORTED
            404:
              body:
                application/json:
                  type: types.errorResponse
                  examples:
                    matchingResourceNotFound:
                      description: No charitable giving data could be found.
                      value:
                        code: MATCHING_RESOURCE_NOT_FOUND
